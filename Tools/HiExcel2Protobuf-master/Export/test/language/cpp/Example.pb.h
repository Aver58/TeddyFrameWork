// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Example.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Example_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Example_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Example_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Example_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Example_2eproto;
namespace HiProtobuf {
class Example;
class ExampleDefaultTypeInternal;
extern ExampleDefaultTypeInternal _Example_default_instance_;
class Excel_Example;
class Excel_ExampleDefaultTypeInternal;
extern Excel_ExampleDefaultTypeInternal _Excel_Example_default_instance_;
class Excel_Example_DataEntry_DoNotUse;
class Excel_Example_DataEntry_DoNotUseDefaultTypeInternal;
extern Excel_Example_DataEntry_DoNotUseDefaultTypeInternal _Excel_Example_DataEntry_DoNotUse_default_instance_;
}  // namespace HiProtobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::HiProtobuf::Example* Arena::CreateMaybeMessage<::HiProtobuf::Example>(Arena*);
template<> ::HiProtobuf::Excel_Example* Arena::CreateMaybeMessage<::HiProtobuf::Excel_Example>(Arena*);
template<> ::HiProtobuf::Excel_Example_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::HiProtobuf::Excel_Example_DataEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace HiProtobuf {

// ===================================================================

class Example :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HiProtobuf.Example) */ {
 public:
  Example();
  virtual ~Example();

  Example(const Example& from);
  Example(Example&& from) noexcept
    : Example() {
    *this = ::std::move(from);
  }

  inline Example& operator=(const Example& from) {
    CopyFrom(from);
    return *this;
  }
  inline Example& operator=(Example&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Example& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Example* internal_default_instance() {
    return reinterpret_cast<const Example*>(
               &_Example_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Example* other);
  friend void swap(Example& a, Example& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Example* New() const final {
    return CreateMaybeMessage<Example>(nullptr);
  }

  Example* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Example>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Example& from);
  void MergeFrom(const Example& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Example* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HiProtobuf.Example";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Example_2eproto);
    return ::descriptor_table_Example_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double name9 = 10;
  int name9_size() const;
  void clear_name9();
  static const int kName9FieldNumber = 10;
  double name9(int index) const;
  void set_name9(int index, double value);
  void add_name9(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      name9() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_name9();

  // repeated float name10 = 11;
  int name10_size() const;
  void clear_name10();
  static const int kName10FieldNumber = 11;
  float name10(int index) const;
  void set_name10(int index, float value);
  void add_name10(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      name10() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_name10();

  // repeated int32 name11 = 12;
  int name11_size() const;
  void clear_name11();
  static const int kName11FieldNumber = 12;
  ::PROTOBUF_NAMESPACE_ID::int32 name11(int index) const;
  void set_name11(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_name11(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      name11() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_name11();

  // repeated int64 name12 = 13;
  int name12_size() const;
  void clear_name12();
  static const int kName12FieldNumber = 13;
  ::PROTOBUF_NAMESPACE_ID::int64 name12(int index) const;
  void set_name12(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_name12(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      name12() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_name12();

  // repeated uint32 name13 = 14;
  int name13_size() const;
  void clear_name13();
  static const int kName13FieldNumber = 14;
  ::PROTOBUF_NAMESPACE_ID::uint32 name13(int index) const;
  void set_name13(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_name13(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      name13() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_name13();

  // repeated uint64 name14 = 15;
  int name14_size() const;
  void clear_name14();
  static const int kName14FieldNumber = 15;
  ::PROTOBUF_NAMESPACE_ID::uint64 name14(int index) const;
  void set_name14(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_name14(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      name14() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_name14();

  // repeated bool name15 = 16;
  int name15_size() const;
  void clear_name15();
  static const int kName15FieldNumber = 16;
  bool name15(int index) const;
  void set_name15(int index, bool value);
  void add_name15(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      name15() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_name15();

  // repeated string name16 = 17;
  int name16_size() const;
  void clear_name16();
  static const int kName16FieldNumber = 17;
  const std::string& name16(int index) const;
  std::string* mutable_name16(int index);
  void set_name16(int index, const std::string& value);
  void set_name16(int index, std::string&& value);
  void set_name16(int index, const char* value);
  void set_name16(int index, const char* value, size_t size);
  std::string* add_name16();
  void add_name16(const std::string& value);
  void add_name16(std::string&& value);
  void add_name16(const char* value);
  void add_name16(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& name16() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_name16();

  // string name8 = 9;
  void clear_name8();
  static const int kName8FieldNumber = 9;
  const std::string& name8() const;
  void set_name8(const std::string& value);
  void set_name8(std::string&& value);
  void set_name8(const char* value);
  void set_name8(const char* value, size_t size);
  std::string* mutable_name8();
  std::string* release_name8();
  void set_allocated_name8(std::string* name8);

  // double name1 = 2;
  void clear_name1();
  static const int kName1FieldNumber = 2;
  double name1() const;
  void set_name1(double value);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // float name2 = 3;
  void clear_name2();
  static const int kName2FieldNumber = 3;
  float name2() const;
  void set_name2(float value);

  // int64 name4 = 5;
  void clear_name4();
  static const int kName4FieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int64 name4() const;
  void set_name4(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int32 name3 = 4;
  void clear_name3();
  static const int kName3FieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 name3() const;
  void set_name3(::PROTOBUF_NAMESPACE_ID::int32 value);

  // uint32 name5 = 6;
  void clear_name5();
  static const int kName5FieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::uint32 name5() const;
  void set_name5(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint64 name6 = 7;
  void clear_name6();
  static const int kName6FieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::uint64 name6() const;
  void set_name6(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // bool name7 = 8;
  void clear_name7();
  static const int kName7FieldNumber = 8;
  bool name7() const;
  void set_name7(bool value);

  // @@protoc_insertion_point(class_scope:HiProtobuf.Example)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > name9_;
  mutable std::atomic<int> _name9_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > name10_;
  mutable std::atomic<int> _name10_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > name11_;
  mutable std::atomic<int> _name11_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > name12_;
  mutable std::atomic<int> _name12_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > name13_;
  mutable std::atomic<int> _name13_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > name14_;
  mutable std::atomic<int> _name14_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > name15_;
  mutable std::atomic<int> _name15_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> name16_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name8_;
  double name1_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  float name2_;
  ::PROTOBUF_NAMESPACE_ID::int64 name4_;
  ::PROTOBUF_NAMESPACE_ID::int32 name3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 name5_;
  ::PROTOBUF_NAMESPACE_ID::uint64 name6_;
  bool name7_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Example_2eproto;
};
// -------------------------------------------------------------------

class Excel_Example_DataEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Excel_Example_DataEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::HiProtobuf::Example,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Excel_Example_DataEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::HiProtobuf::Example,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Excel_Example_DataEntry_DoNotUse();
  Excel_Example_DataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Excel_Example_DataEntry_DoNotUse& other);
  static const Excel_Example_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Excel_Example_DataEntry_DoNotUse*>(&_Excel_Example_DataEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Example_2eproto);
    return ::descriptor_table_Example_2eproto.file_level_metadata[1];
  }

  public:
};

// -------------------------------------------------------------------

class Excel_Example :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HiProtobuf.Excel_Example) */ {
 public:
  Excel_Example();
  virtual ~Excel_Example();

  Excel_Example(const Excel_Example& from);
  Excel_Example(Excel_Example&& from) noexcept
    : Excel_Example() {
    *this = ::std::move(from);
  }

  inline Excel_Example& operator=(const Excel_Example& from) {
    CopyFrom(from);
    return *this;
  }
  inline Excel_Example& operator=(Excel_Example&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Excel_Example& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Excel_Example* internal_default_instance() {
    return reinterpret_cast<const Excel_Example*>(
               &_Excel_Example_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Excel_Example* other);
  friend void swap(Excel_Example& a, Excel_Example& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Excel_Example* New() const final {
    return CreateMaybeMessage<Excel_Example>(nullptr);
  }

  Excel_Example* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Excel_Example>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Excel_Example& from);
  void MergeFrom(const Excel_Example& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Excel_Example* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HiProtobuf.Excel_Example";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Example_2eproto);
    return ::descriptor_table_Example_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .HiProtobuf.Example> Data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::HiProtobuf::Example >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::HiProtobuf::Example >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:HiProtobuf.Excel_Example)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Excel_Example_DataEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::HiProtobuf::Example,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Example_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Example

// int32 id = 1;
inline void Example::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Example::id() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.id)
  return id_;
}
inline void Example::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.id)
}

// double name1 = 2;
inline void Example::clear_name1() {
  name1_ = 0;
}
inline double Example::name1() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name1)
  return name1_;
}
inline void Example::set_name1(double value) {
  
  name1_ = value;
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name1)
}

// float name2 = 3;
inline void Example::clear_name2() {
  name2_ = 0;
}
inline float Example::name2() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name2)
  return name2_;
}
inline void Example::set_name2(float value) {
  
  name2_ = value;
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name2)
}

// int32 name3 = 4;
inline void Example::clear_name3() {
  name3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Example::name3() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name3)
  return name3_;
}
inline void Example::set_name3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  name3_ = value;
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name3)
}

// int64 name4 = 5;
inline void Example::clear_name4() {
  name4_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Example::name4() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name4)
  return name4_;
}
inline void Example::set_name4(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  name4_ = value;
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name4)
}

// uint32 name5 = 6;
inline void Example::clear_name5() {
  name5_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Example::name5() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name5)
  return name5_;
}
inline void Example::set_name5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  name5_ = value;
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name5)
}

// uint64 name6 = 7;
inline void Example::clear_name6() {
  name6_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Example::name6() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name6)
  return name6_;
}
inline void Example::set_name6(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  name6_ = value;
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name6)
}

// bool name7 = 8;
inline void Example::clear_name7() {
  name7_ = false;
}
inline bool Example::name7() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name7)
  return name7_;
}
inline void Example::set_name7(bool value) {
  
  name7_ = value;
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name7)
}

// string name8 = 9;
inline void Example::clear_name8() {
  name8_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Example::name8() const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name8)
  return name8_.GetNoArena();
}
inline void Example::set_name8(const std::string& value) {
  
  name8_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name8)
}
inline void Example::set_name8(std::string&& value) {
  
  name8_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:HiProtobuf.Example.name8)
}
inline void Example::set_name8(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name8_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HiProtobuf.Example.name8)
}
inline void Example::set_name8(const char* value, size_t size) {
  
  name8_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HiProtobuf.Example.name8)
}
inline std::string* Example::mutable_name8() {
  
  // @@protoc_insertion_point(field_mutable:HiProtobuf.Example.name8)
  return name8_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Example::release_name8() {
  // @@protoc_insertion_point(field_release:HiProtobuf.Example.name8)
  
  return name8_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Example::set_allocated_name8(std::string* name8) {
  if (name8 != nullptr) {
    
  } else {
    
  }
  name8_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name8);
  // @@protoc_insertion_point(field_set_allocated:HiProtobuf.Example.name8)
}

// repeated double name9 = 10;
inline int Example::name9_size() const {
  return name9_.size();
}
inline void Example::clear_name9() {
  name9_.Clear();
}
inline double Example::name9(int index) const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name9)
  return name9_.Get(index);
}
inline void Example::set_name9(int index, double value) {
  name9_.Set(index, value);
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name9)
}
inline void Example::add_name9(double value) {
  name9_.Add(value);
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name9)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Example::name9() const {
  // @@protoc_insertion_point(field_list:HiProtobuf.Example.name9)
  return name9_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Example::mutable_name9() {
  // @@protoc_insertion_point(field_mutable_list:HiProtobuf.Example.name9)
  return &name9_;
}

// repeated float name10 = 11;
inline int Example::name10_size() const {
  return name10_.size();
}
inline void Example::clear_name10() {
  name10_.Clear();
}
inline float Example::name10(int index) const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name10)
  return name10_.Get(index);
}
inline void Example::set_name10(int index, float value) {
  name10_.Set(index, value);
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name10)
}
inline void Example::add_name10(float value) {
  name10_.Add(value);
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name10)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Example::name10() const {
  // @@protoc_insertion_point(field_list:HiProtobuf.Example.name10)
  return name10_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Example::mutable_name10() {
  // @@protoc_insertion_point(field_mutable_list:HiProtobuf.Example.name10)
  return &name10_;
}

// repeated int32 name11 = 12;
inline int Example::name11_size() const {
  return name11_.size();
}
inline void Example::clear_name11() {
  name11_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Example::name11(int index) const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name11)
  return name11_.Get(index);
}
inline void Example::set_name11(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  name11_.Set(index, value);
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name11)
}
inline void Example::add_name11(::PROTOBUF_NAMESPACE_ID::int32 value) {
  name11_.Add(value);
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name11)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Example::name11() const {
  // @@protoc_insertion_point(field_list:HiProtobuf.Example.name11)
  return name11_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Example::mutable_name11() {
  // @@protoc_insertion_point(field_mutable_list:HiProtobuf.Example.name11)
  return &name11_;
}

// repeated int64 name12 = 13;
inline int Example::name12_size() const {
  return name12_.size();
}
inline void Example::clear_name12() {
  name12_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Example::name12(int index) const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name12)
  return name12_.Get(index);
}
inline void Example::set_name12(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  name12_.Set(index, value);
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name12)
}
inline void Example::add_name12(::PROTOBUF_NAMESPACE_ID::int64 value) {
  name12_.Add(value);
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name12)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
Example::name12() const {
  // @@protoc_insertion_point(field_list:HiProtobuf.Example.name12)
  return name12_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
Example::mutable_name12() {
  // @@protoc_insertion_point(field_mutable_list:HiProtobuf.Example.name12)
  return &name12_;
}

// repeated uint32 name13 = 14;
inline int Example::name13_size() const {
  return name13_.size();
}
inline void Example::clear_name13() {
  name13_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Example::name13(int index) const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name13)
  return name13_.Get(index);
}
inline void Example::set_name13(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  name13_.Set(index, value);
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name13)
}
inline void Example::add_name13(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  name13_.Add(value);
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name13)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Example::name13() const {
  // @@protoc_insertion_point(field_list:HiProtobuf.Example.name13)
  return name13_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Example::mutable_name13() {
  // @@protoc_insertion_point(field_mutable_list:HiProtobuf.Example.name13)
  return &name13_;
}

// repeated uint64 name14 = 15;
inline int Example::name14_size() const {
  return name14_.size();
}
inline void Example::clear_name14() {
  name14_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Example::name14(int index) const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name14)
  return name14_.Get(index);
}
inline void Example::set_name14(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  name14_.Set(index, value);
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name14)
}
inline void Example::add_name14(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  name14_.Add(value);
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name14)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
Example::name14() const {
  // @@protoc_insertion_point(field_list:HiProtobuf.Example.name14)
  return name14_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
Example::mutable_name14() {
  // @@protoc_insertion_point(field_mutable_list:HiProtobuf.Example.name14)
  return &name14_;
}

// repeated bool name15 = 16;
inline int Example::name15_size() const {
  return name15_.size();
}
inline void Example::clear_name15() {
  name15_.Clear();
}
inline bool Example::name15(int index) const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name15)
  return name15_.Get(index);
}
inline void Example::set_name15(int index, bool value) {
  name15_.Set(index, value);
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name15)
}
inline void Example::add_name15(bool value) {
  name15_.Add(value);
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name15)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
Example::name15() const {
  // @@protoc_insertion_point(field_list:HiProtobuf.Example.name15)
  return name15_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
Example::mutable_name15() {
  // @@protoc_insertion_point(field_mutable_list:HiProtobuf.Example.name15)
  return &name15_;
}

// repeated string name16 = 17;
inline int Example::name16_size() const {
  return name16_.size();
}
inline void Example::clear_name16() {
  name16_.Clear();
}
inline const std::string& Example::name16(int index) const {
  // @@protoc_insertion_point(field_get:HiProtobuf.Example.name16)
  return name16_.Get(index);
}
inline std::string* Example::mutable_name16(int index) {
  // @@protoc_insertion_point(field_mutable:HiProtobuf.Example.name16)
  return name16_.Mutable(index);
}
inline void Example::set_name16(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name16)
  name16_.Mutable(index)->assign(value);
}
inline void Example::set_name16(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:HiProtobuf.Example.name16)
  name16_.Mutable(index)->assign(std::move(value));
}
inline void Example::set_name16(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  name16_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:HiProtobuf.Example.name16)
}
inline void Example::set_name16(int index, const char* value, size_t size) {
  name16_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:HiProtobuf.Example.name16)
}
inline std::string* Example::add_name16() {
  // @@protoc_insertion_point(field_add_mutable:HiProtobuf.Example.name16)
  return name16_.Add();
}
inline void Example::add_name16(const std::string& value) {
  name16_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name16)
}
inline void Example::add_name16(std::string&& value) {
  name16_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:HiProtobuf.Example.name16)
}
inline void Example::add_name16(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  name16_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:HiProtobuf.Example.name16)
}
inline void Example::add_name16(const char* value, size_t size) {
  name16_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:HiProtobuf.Example.name16)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Example::name16() const {
  // @@protoc_insertion_point(field_list:HiProtobuf.Example.name16)
  return name16_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Example::mutable_name16() {
  // @@protoc_insertion_point(field_mutable_list:HiProtobuf.Example.name16)
  return &name16_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Excel_Example

// map<int32, .HiProtobuf.Example> Data = 1;
inline int Excel_Example::data_size() const {
  return data_.size();
}
inline void Excel_Example::clear_data() {
  data_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::HiProtobuf::Example >&
Excel_Example::data() const {
  // @@protoc_insertion_point(field_map:HiProtobuf.Excel_Example.Data)
  return data_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::HiProtobuf::Example >*
Excel_Example::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:HiProtobuf.Excel_Example.Data)
  return data_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace HiProtobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Example_2eproto
