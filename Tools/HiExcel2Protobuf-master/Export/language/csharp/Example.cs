// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Example.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HiProtobuf {

  /// <summary>Holder for reflection information generated from Example.proto</summary>
  public static partial class ExampleReflection {

    #region Descriptor
    /// <summary>File descriptor for Example.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExampleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1FeGFtcGxlLnByb3RvEgpIaVByb3RvYnVmIowCCgdFeGFtcGxlEgoKAmlk",
            "GAEgASgFEg0KBW5hbWUxGAIgASgBEg0KBW5hbWUyGAMgASgCEg0KBW5hbWUz",
            "GAQgASgFEg0KBW5hbWU0GAUgASgDEg0KBW5hbWU1GAYgASgNEg0KBW5hbWU2",
            "GAcgASgEEg0KBW5hbWU3GAggASgIEg0KBW5hbWU4GAkgASgJEg0KBW5hbWU5",
            "GAogAygBEg4KBm5hbWUxMBgLIAMoAhIOCgZuYW1lMTEYDCADKAUSDgoGbmFt",
            "ZTEyGA0gAygDEg4KBm5hbWUxMxgOIAMoDRIOCgZuYW1lMTQYDyADKAQSDgoG",
            "bmFtZTE1GBAgAygIEg4KBm5hbWUxNhgRIAMoCSKEAQoNRXhjZWxfRXhhbXBs",
            "ZRIxCgREYXRhGAEgAygLMiMuSGlQcm90b2J1Zi5FeGNlbF9FeGFtcGxlLkRh",
            "dGFFbnRyeRpACglEYXRhRW50cnkSCwoDa2V5GAEgASgFEiIKBXZhbHVlGAIg",
            "ASgLMhMuSGlQcm90b2J1Zi5FeGFtcGxlOgI4AUI7Chljb20uSGlQcm90b2J1",
            "Zi5IaVByb3RvYnVmQhFFeGFtcGxlX2NsYXNzbmFtZaoCCkhpUHJvdG9idWZi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HiProtobuf.Example), global::HiProtobuf.Example.Parser, new[]{ "Id", "Name1", "Name2", "Name3", "Name4", "Name5", "Name6", "Name7", "Name8", "Name9", "Name10", "Name11", "Name12", "Name13", "Name14", "Name15", "Name16" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HiProtobuf.Excel_Example), global::HiProtobuf.Excel_Example.Parser, new[]{ "Data" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Example : pb::IMessage<Example> {
    private static readonly pb::MessageParser<Example> _parser = new pb::MessageParser<Example>(() => new Example());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Example> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HiProtobuf.ExampleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Example() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Example(Example other) : this() {
      id_ = other.id_;
      name1_ = other.name1_;
      name2_ = other.name2_;
      name3_ = other.name3_;
      name4_ = other.name4_;
      name5_ = other.name5_;
      name6_ = other.name6_;
      name7_ = other.name7_;
      name8_ = other.name8_;
      name9_ = other.name9_.Clone();
      name10_ = other.name10_.Clone();
      name11_ = other.name11_.Clone();
      name12_ = other.name12_.Clone();
      name13_ = other.name13_.Clone();
      name14_ = other.name14_.Clone();
      name15_ = other.name15_.Clone();
      name16_ = other.name16_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Example Clone() {
      return new Example(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name1" field.</summary>
    public const int Name1FieldNumber = 2;
    private double name1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Name1 {
      get { return name1_; }
      set {
        name1_ = value;
      }
    }

    /// <summary>Field number for the "name2" field.</summary>
    public const int Name2FieldNumber = 3;
    private float name2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Name2 {
      get { return name2_; }
      set {
        name2_ = value;
      }
    }

    /// <summary>Field number for the "name3" field.</summary>
    public const int Name3FieldNumber = 4;
    private int name3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Name3 {
      get { return name3_; }
      set {
        name3_ = value;
      }
    }

    /// <summary>Field number for the "name4" field.</summary>
    public const int Name4FieldNumber = 5;
    private long name4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Name4 {
      get { return name4_; }
      set {
        name4_ = value;
      }
    }

    /// <summary>Field number for the "name5" field.</summary>
    public const int Name5FieldNumber = 6;
    private uint name5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Name5 {
      get { return name5_; }
      set {
        name5_ = value;
      }
    }

    /// <summary>Field number for the "name6" field.</summary>
    public const int Name6FieldNumber = 7;
    private ulong name6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Name6 {
      get { return name6_; }
      set {
        name6_ = value;
      }
    }

    /// <summary>Field number for the "name7" field.</summary>
    public const int Name7FieldNumber = 8;
    private bool name7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Name7 {
      get { return name7_; }
      set {
        name7_ = value;
      }
    }

    /// <summary>Field number for the "name8" field.</summary>
    public const int Name8FieldNumber = 9;
    private string name8_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name8 {
      get { return name8_; }
      set {
        name8_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name9" field.</summary>
    public const int Name9FieldNumber = 10;
    private static readonly pb::FieldCodec<double> _repeated_name9_codec
        = pb::FieldCodec.ForDouble(82);
    private readonly pbc::RepeatedField<double> name9_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Name9 {
      get { return name9_; }
    }

    /// <summary>Field number for the "name10" field.</summary>
    public const int Name10FieldNumber = 11;
    private static readonly pb::FieldCodec<float> _repeated_name10_codec
        = pb::FieldCodec.ForFloat(90);
    private readonly pbc::RepeatedField<float> name10_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Name10 {
      get { return name10_; }
    }

    /// <summary>Field number for the "name11" field.</summary>
    public const int Name11FieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_name11_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> name11_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Name11 {
      get { return name11_; }
    }

    /// <summary>Field number for the "name12" field.</summary>
    public const int Name12FieldNumber = 13;
    private static readonly pb::FieldCodec<long> _repeated_name12_codec
        = pb::FieldCodec.ForInt64(106);
    private readonly pbc::RepeatedField<long> name12_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Name12 {
      get { return name12_; }
    }

    /// <summary>Field number for the "name13" field.</summary>
    public const int Name13FieldNumber = 14;
    private static readonly pb::FieldCodec<uint> _repeated_name13_codec
        = pb::FieldCodec.ForUInt32(114);
    private readonly pbc::RepeatedField<uint> name13_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Name13 {
      get { return name13_; }
    }

    /// <summary>Field number for the "name14" field.</summary>
    public const int Name14FieldNumber = 15;
    private static readonly pb::FieldCodec<ulong> _repeated_name14_codec
        = pb::FieldCodec.ForUInt64(122);
    private readonly pbc::RepeatedField<ulong> name14_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Name14 {
      get { return name14_; }
    }

    /// <summary>Field number for the "name15" field.</summary>
    public const int Name15FieldNumber = 16;
    private static readonly pb::FieldCodec<bool> _repeated_name15_codec
        = pb::FieldCodec.ForBool(130);
    private readonly pbc::RepeatedField<bool> name15_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Name15 {
      get { return name15_; }
    }

    /// <summary>Field number for the "name16" field.</summary>
    public const int Name16FieldNumber = 17;
    private static readonly pb::FieldCodec<string> _repeated_name16_codec
        = pb::FieldCodec.ForString(138);
    private readonly pbc::RepeatedField<string> name16_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Name16 {
      get { return name16_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Example);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Example other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Name1, other.Name1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Name2, other.Name2)) return false;
      if (Name3 != other.Name3) return false;
      if (Name4 != other.Name4) return false;
      if (Name5 != other.Name5) return false;
      if (Name6 != other.Name6) return false;
      if (Name7 != other.Name7) return false;
      if (Name8 != other.Name8) return false;
      if(!name9_.Equals(other.name9_)) return false;
      if(!name10_.Equals(other.name10_)) return false;
      if(!name11_.Equals(other.name11_)) return false;
      if(!name12_.Equals(other.name12_)) return false;
      if(!name13_.Equals(other.name13_)) return false;
      if(!name14_.Equals(other.name14_)) return false;
      if(!name15_.Equals(other.name15_)) return false;
      if(!name16_.Equals(other.name16_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name1 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Name1);
      if (Name2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Name2);
      if (Name3 != 0) hash ^= Name3.GetHashCode();
      if (Name4 != 0L) hash ^= Name4.GetHashCode();
      if (Name5 != 0) hash ^= Name5.GetHashCode();
      if (Name6 != 0UL) hash ^= Name6.GetHashCode();
      if (Name7 != false) hash ^= Name7.GetHashCode();
      if (Name8.Length != 0) hash ^= Name8.GetHashCode();
      hash ^= name9_.GetHashCode();
      hash ^= name10_.GetHashCode();
      hash ^= name11_.GetHashCode();
      hash ^= name12_.GetHashCode();
      hash ^= name13_.GetHashCode();
      hash ^= name14_.GetHashCode();
      hash ^= name15_.GetHashCode();
      hash ^= name16_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name1 != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Name1);
      }
      if (Name2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Name2);
      }
      if (Name3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Name3);
      }
      if (Name4 != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Name4);
      }
      if (Name5 != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Name5);
      }
      if (Name6 != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(Name6);
      }
      if (Name7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Name7);
      }
      if (Name8.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Name8);
      }
      name9_.WriteTo(output, _repeated_name9_codec);
      name10_.WriteTo(output, _repeated_name10_codec);
      name11_.WriteTo(output, _repeated_name11_codec);
      name12_.WriteTo(output, _repeated_name12_codec);
      name13_.WriteTo(output, _repeated_name13_codec);
      name14_.WriteTo(output, _repeated_name14_codec);
      name15_.WriteTo(output, _repeated_name15_codec);
      name16_.WriteTo(output, _repeated_name16_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name1 != 0D) {
        size += 1 + 8;
      }
      if (Name2 != 0F) {
        size += 1 + 4;
      }
      if (Name3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Name3);
      }
      if (Name4 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Name4);
      }
      if (Name5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Name5);
      }
      if (Name6 != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Name6);
      }
      if (Name7 != false) {
        size += 1 + 1;
      }
      if (Name8.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name8);
      }
      size += name9_.CalculateSize(_repeated_name9_codec);
      size += name10_.CalculateSize(_repeated_name10_codec);
      size += name11_.CalculateSize(_repeated_name11_codec);
      size += name12_.CalculateSize(_repeated_name12_codec);
      size += name13_.CalculateSize(_repeated_name13_codec);
      size += name14_.CalculateSize(_repeated_name14_codec);
      size += name15_.CalculateSize(_repeated_name15_codec);
      size += name16_.CalculateSize(_repeated_name16_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Example other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name1 != 0D) {
        Name1 = other.Name1;
      }
      if (other.Name2 != 0F) {
        Name2 = other.Name2;
      }
      if (other.Name3 != 0) {
        Name3 = other.Name3;
      }
      if (other.Name4 != 0L) {
        Name4 = other.Name4;
      }
      if (other.Name5 != 0) {
        Name5 = other.Name5;
      }
      if (other.Name6 != 0UL) {
        Name6 = other.Name6;
      }
      if (other.Name7 != false) {
        Name7 = other.Name7;
      }
      if (other.Name8.Length != 0) {
        Name8 = other.Name8;
      }
      name9_.Add(other.name9_);
      name10_.Add(other.name10_);
      name11_.Add(other.name11_);
      name12_.Add(other.name12_);
      name13_.Add(other.name13_);
      name14_.Add(other.name14_);
      name15_.Add(other.name15_);
      name16_.Add(other.name16_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 17: {
            Name1 = input.ReadDouble();
            break;
          }
          case 29: {
            Name2 = input.ReadFloat();
            break;
          }
          case 32: {
            Name3 = input.ReadInt32();
            break;
          }
          case 40: {
            Name4 = input.ReadInt64();
            break;
          }
          case 48: {
            Name5 = input.ReadUInt32();
            break;
          }
          case 56: {
            Name6 = input.ReadUInt64();
            break;
          }
          case 64: {
            Name7 = input.ReadBool();
            break;
          }
          case 74: {
            Name8 = input.ReadString();
            break;
          }
          case 82:
          case 81: {
            name9_.AddEntriesFrom(input, _repeated_name9_codec);
            break;
          }
          case 90:
          case 93: {
            name10_.AddEntriesFrom(input, _repeated_name10_codec);
            break;
          }
          case 98:
          case 96: {
            name11_.AddEntriesFrom(input, _repeated_name11_codec);
            break;
          }
          case 106:
          case 104: {
            name12_.AddEntriesFrom(input, _repeated_name12_codec);
            break;
          }
          case 114:
          case 112: {
            name13_.AddEntriesFrom(input, _repeated_name13_codec);
            break;
          }
          case 122:
          case 120: {
            name14_.AddEntriesFrom(input, _repeated_name14_codec);
            break;
          }
          case 130:
          case 128: {
            name15_.AddEntriesFrom(input, _repeated_name15_codec);
            break;
          }
          case 138: {
            name16_.AddEntriesFrom(input, _repeated_name16_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Excel_Example : pb::IMessage<Excel_Example> {
    private static readonly pb::MessageParser<Excel_Example> _parser = new pb::MessageParser<Excel_Example>(() => new Excel_Example());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Excel_Example> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HiProtobuf.ExampleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Excel_Example() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Excel_Example(Excel_Example other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Excel_Example Clone() {
      return new Excel_Example(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pbc::MapField<int, global::HiProtobuf.Example>.Codec _map_data_codec
        = new pbc::MapField<int, global::HiProtobuf.Example>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::HiProtobuf.Example.Parser), 10);
    private readonly pbc::MapField<int, global::HiProtobuf.Example> data_ = new pbc::MapField<int, global::HiProtobuf.Example>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::HiProtobuf.Example> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Excel_Example);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Excel_Example other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Data.Equals(other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _map_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_map_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Excel_Example other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _map_data_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
